import unittest
import json
from io import BytesIO
from main import app

class TestPerformance(unittest.TestCase):

    def setUp(self):
        self.app = app.test_client()

    def tearDown(self):
        pass

    def test_healthy_image(self):
        print("\nTesting with a healthy plant image...")

        base64_data = ""
        response = self.app.post('/get_disease_info', json={'image': base64_data})
        data = json.loads(response.data)
        print("Input: Healthy plant image")
        print("Expected Output: {'result': 'Healthy'}")
        print(f"Response Status Code: {response.status_code}")
        print(f"Actual Output: {data}")
        self.assertEqual(response.status_code, 200)
        self.assertEqual(data['result'], 'Healthy')

    def test_diseased_image(self):
        print("\nTesting with a diseased plant image...")

        base64_data = ""
        response = self.app.post('/get_disease_info', json={'image': base64_data})
        data = json.loads(response.data)
        print("Input: Diseased plant image")
        print("Expected Output: {'result': {'disease_name': '...', 'plant_name': '...', 'symptoms': '...', 'treatment': '...'}}")
        print(f"Response Status Code: {response.status_code}")
        print(f"Actual Output: {data}")
        self.assertEqual(response.status_code, 200)
        self.assertIn('disease_name', data['result'])
        self.assertIn('plant_name', data['result'])
        self.assertIn('symptoms', data['result'])
        self.assertIn('treatment', data['result'])

    def test_missing_image_data(self):
        print("\nTesting with missing image data...")
        response = self.app.post('/get_disease_info', json={})
        data = json.loads(response.data)
        print("Input: Missing image data")
        print("Expected Output: {'error': 'Image not provided'}")
        print(f"Response Status Code: {response.status_code}")
        print(f"Actual Output: {data}")
        self.assertEqual(response.status_code, 400)
        self.assertEqual(data['error'], 'Image not provided')

    def test_empty_image_data(self):
        print("\nTesting with empty image data...")
        response = self.app.post('/get_disease_info', json={'image': ''})
        data = json.loads(response.data)
        print("Input: Empty image data")
        print("Expected Output: {'error': 'Image not provided'}")
        print(f"Response Status Code: {response.status_code}")
        print(f"Actual Output: {data}")
        self.assertEqual(response.status_code, 400)
        self.assertEqual(data['error'], 'Image not provided')

    def test_malformed_json_data(self):
        print("\nTesting with malformed JSON data...")
        response = self.app.post('/get_disease_info', data='not json')
        print("Input: Malformed JSON data")
        print("Expected Output: 400 (Bad Request)")
        print(f"Response Status Code: {response.status_code}")
        self.assertEqual(response.status_code, 500)

    def test_invalid_base64_image_data(self):
        print("\nTesting with invalid base64-encoded image data...")
        response = self.app.post('/get_disease_info', json={'image': 'invalid_base64_data'})
        data = json.loads(response.data)
        print("Input: Invalid base64-encoded image data")
        print("Expected Output: {'error': 'Invalid base64-encoded image data'}")
        print(f"Response Status Code: {response.status_code}")
        print(f"Actual Output: {data}")
        self.assertEqual(response.status_code, 401)
        self.assertEqual(data['error'], 'Invalid base64-encoded image data')


if __name__ == '__main__':
    unittest.main()
